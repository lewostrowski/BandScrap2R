{"ast":null,"code":"var _jsxFileName = \"/home/capitalturtle/react/client/src/components/Feed/Feed.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Feed(_ref) {\n  _s();\n  let {\n    albums\n  } = _ref;\n  const [moreInfo, setMoreInfo] = useState({\n    tralbum_id: 0\n  });\n  const getMoreInfo = albumID => {\n    if (albumID > 0) {\n      fetch(`http://localhost:5000/details/${albumID}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => res.json()).then(data => {\n        setMoreInfo({\n          tralbum_id: data[0].tralbum_id,\n          album_description: data[0].album_description,\n          tracks_num: data[0].tracks_num\n        });\n      });\n    }\n  };\n  return [albums.map((album, i) => /*#__PURE__*/_jsxDEV(Col, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      id: album.tralbum_id,\n      style: {\n        width: '400px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n        style: {\n          border: \"0\",\n          width: \"400px\",\n          height: \"400px\"\n        },\n        src: `https://bandcamp.com/EmbeddedPlayer/album=${album.tralbum_id}/size=large/bgcol=ffffff/linkcol=0687f5/minimal=true/track=c/transparent=true/`,\n        seamless: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: album.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n          className: \"mb-2 text-muted\",\n          children: [\"By: \", album.artist]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        style: {\n          height: \"250px\",\n          overflow: \"scroll\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Relese date: \", album.published, \",\", album.is_preorder == '1' ? /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \" preorder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \" buynow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Label: \", album.band_name, \", \", album.label_origin]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Price: \", album.price, \" \", album.currency]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Genres: \", album.genres.split(',').map((genre, j) => j < album.genres.split(',').length - 1 ? /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [genre.replace(/\\]|\\[|\\'/g, ''), \",\"]\n          }, j, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: genre.replace(/\\]|\\[|\\'/g, '')\n          }, j, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), moreInfo.tralbum_id == album.tralbum_id ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: () => {\n              setMoreInfo({\n                tralbum_id: 0\n              });\n            },\n            children: \"Hide info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Tracks: \", moreInfo.tracks_num]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Description: \", moreInfo.album_description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: () => {\n            getMoreInfo(album.tralbum_id);\n          },\n          children: \"More info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)]\n    }, album.tralbum_id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 13\n  }, this))];\n}\n_s(Feed, \"TIiEvYyNi4xzd8qvw0BPjy8ws3U=\");\n_c = Feed;\nexport default Feed;\nvar _c;\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"names":["React","useState","Button","Card","Col","Feed","albums","moreInfo","setMoreInfo","tralbum_id","getMoreInfo","albumID","fetch","method","headers","then","res","json","data","album_description","tracks_num","map","album","i","width","border","height","title","artist","overflow","published","is_preorder","band_name","label_origin","price","currency","genres","split","genre","j","length","replace"],"sources":["/home/capitalturtle/react/client/src/components/Feed/Feed.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\n\nfunction Feed({ albums }) {\n    const [moreInfo, setMoreInfo] = useState({tralbum_id: 0})\n\n    const getMoreInfo = (albumID) => {\n        if (albumID > 0) {\n            fetch(`http://localhost:5000/details/${albumID}`, {\n                method: 'GET',\n                headers: {'Content-Type': 'application/json'}\n            }).then(res => res.json()).then(data => {\n                setMoreInfo({\n                    tralbum_id: data[0].tralbum_id,\n                    album_description: data[0].album_description,\n                    tracks_num: data[0].tracks_num\n                })\n            })\n        }\n    }\n    \n  return (\n        [albums.map((album, i) => (\n            <Col>\n                <Card key={album.tralbum_id} id={album.tralbum_id} style={{ width: '400px' }}>\n                    <iframe style={{border: \"0\", width: \"400px\", height: \"400px\"}} src={`https://bandcamp.com/EmbeddedPlayer/album=${album.tralbum_id}/size=large/bgcol=ffffff/linkcol=0687f5/minimal=true/track=c/transparent=true/`} seamless>\n                    </iframe> \n                    <Card.Body>\n                        <Card.Title>{album.title}</Card.Title>\n                        <Card.Subtitle className=\"mb-2 text-muted\">By: {album.artist}</Card.Subtitle>\n                    </Card.Body>\n                    <Card.Text style={{ height: \"250px\", overflow: \"scroll\" }}>\n                        {/* TODO(): Links to bandcamp and spotify + icons */}\n                        <p>Relese date: {album.published}, \n                        {(album.is_preorder == '1') ? (\n                            <span> preorder</span>\n                        ) : (\n                            <span> buynow</span>\n                        )}</p>\n                        \n                        <p>Label: {album.band_name}, {album.label_origin}</p>\n                        <p>Price: {album.price} {album.currency}</p>\n                        <p>Genres: {album.genres.split(',').map((genre, j) => (\n                            (j < album.genres.split(',').length -1) ? (\n                                <span key={j}>{genre.replace(/\\]|\\[|\\'/g, '')},</span>\n                            ) : (\n                                <span key={j}>{genre.replace(/\\]|\\[|\\'/g, '')}</span>\n                            )\n                        ))}</p>\n                        {(moreInfo.tralbum_id == album.tralbum_id) ? (\n                                <div>\n                                    <Button variant=\"primary\" onClick={() => {setMoreInfo({tralbum_id: 0})}}>Hide info</Button>\n                                    <p>Tracks: {moreInfo.tracks_num}</p>\n                                    <p>Description: {moreInfo.album_description}</p>\n                                </div>\n                            ) : (\n                                <Button variant=\"primary\" onClick={() => {getMoreInfo(album.tralbum_id)}}>More info</Button>\n                            )}\n                    </Card.Text>\n                </Card>\n            </Col>\n        ))]\n  )\n}\n\nexport default Feed"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/capitalturtle/react/client/src/components/Filters/Filters.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Tab from 'react-bootstrap/Tab';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Row from 'react-bootstrap/Row';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport FiltersLibrary from './FiltersLibrary';\n\n// pobieranie slownika gatunkow\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Filters(_ref) {\n  _s();\n  let {\n    albums,\n    externalSet\n  } = _ref;\n  const [filters, setFilters] = useState({\n    artist: '',\n    title: '',\n    genres: '',\n    band_name: '',\n    label_origin: '',\n    genres_include: [],\n    genres_exclude: []\n  });\n  const [inner, setInner] = useState(albums);\n  const [availableGenres, setAvailableGenres] = useState([]);\n  function removeDuplicates(arr) {\n    return arr.filter((item, index) => arr.indexOf(item) === index);\n  }\n  useEffect(() => {\n    var gArray = [];\n    for (let album of inner) {\n      var albumGenres = album.genres.split(', ');\n      for (let genre of albumGenres) {\n        genre.replace(/\\]|\\[|\\'/g, '');\n        gArray.push(genre);\n      }\n    }\n    console.log(gArray);\n    setAvailableGenres(removeDuplicates(gArray));\n  }, [inner]);\n  useEffect(() => {\n    var f = new FiltersLibrary(albums, filters);\n    var match = f.manage();\n    setInner(removeDuplicates(match));\n    externalSet(removeDuplicates(match), 'real');\n  }, [filters]);\n  const handleInput = e => {\n    const keyName = e.target.name;\n    const keyVal = e.target.value;\n    setFilters(prev => ({\n      ...prev,\n      [keyName]: keyVal\n    }));\n  };\n  return (\n    /*#__PURE__*/\n    // TODO(): Clear button and clear all button\n    // TODO(): Running filters.\n    _jsxDEV(Row, {\n      className: \"g-4 justify-content-md-center\",\n      style: {\n        margin: \"1rem 0rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(Tabs, {\n          defaultActiveKey: \"phrase\",\n          id: \"filters-menu\",\n          className: \"mb-3\",\n          fill: true,\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            eventKey: \"phrase\",\n            title: \"Phrase filter\",\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Artist name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  name: \"artist\",\n                  value: filters.artist,\n                  onChange: handleInput\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                  className: \"text-muted\",\n                  children: \"It is common on Bandcamp for label to put their name as artist name. In this case try to search artist name also in album's title.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Album title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  name: \"title\",\n                  value: filters.title,\n                  onChange: handleInput\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                  className: \"text-muted\",\n                  children: \"It is common for label to put artist's name in album's title field.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Genres\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  name: \"genres\",\n                  value: filters.genres,\n                  onChange: handleInput\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                  className: \"text-muted\",\n                  children: \"Simplified search by key value.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Label name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  name: \"band_name\",\n                  value: filters.band_name,\n                  onChange: handleInput\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                  className: \"text-muted\",\n                  children: \"If an artist doesn't have label, Bandcamp assigns artist name to that field.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Label origin\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  name: \"label_origin\",\n                  value: filters.label_origin,\n                  onChange: handleInput\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                  className: \"text-muted\",\n                  children: \"Label or artist origin.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            eventKey: \"genres\",\n            title: \"Genres filter\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Work in progress.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(Filters, \"v7exUtmPPIap2Kl9WLtvhklWPP0=\");\n_c = Filters;\nexport default Filters;\nvar _c;\n$RefreshReg$(_c, \"Filters\");","map":{"version":3,"names":["React","useState","useEffect","Tab","Tabs","Row","Form","Col","FiltersLibrary","Filters","albums","externalSet","filters","setFilters","artist","title","genres","band_name","label_origin","genres_include","genres_exclude","inner","setInner","availableGenres","setAvailableGenres","removeDuplicates","arr","filter","item","index","indexOf","gArray","album","albumGenres","split","genre","replace","push","console","log","f","match","manage","handleInput","e","keyName","target","name","keyVal","value","prev","margin"],"sources":["/home/capitalturtle/react/client/src/components/Filters/Filters.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport Tab from 'react-bootstrap/Tab';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Row from 'react-bootstrap/Row';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\n\nimport FiltersLibrary from './FiltersLibrary'\n\n// pobieranie slownika gatunkow\n\nfunction Filters({ albums, externalSet }) {\n    const [filters, setFilters] = useState({\n        artist: '',\n        title: '',\n        genres: '',\n        band_name: '',\n        label_origin: '',\n        genres_include: [],\n        genres_exclude: []\n    })\n    const [inner, setInner] = useState(albums)\n    const [availableGenres, setAvailableGenres] = useState([])\n\n    function removeDuplicates(arr) {\n        return arr.filter((item, \n            index) => arr.indexOf(item) === index);\n    }\n\n    useEffect(() => {\n        var gArray = []\n        for (let album of inner) {\n            var albumGenres = album.genres.split(', ')\n            for (let genre of albumGenres) {\n                genre.replace(/\\]|\\[|\\'/g, '')\n                gArray.push(genre)\n            }\n        }\n        console.log(gArray)\n        setAvailableGenres(removeDuplicates(gArray))\n    }, [inner])\n\n    useEffect(() => {\n        var f = new FiltersLibrary(albums, filters)\n        var match = f.manage()\n\n        setInner(removeDuplicates(match))\n        externalSet(removeDuplicates(match), 'real')\n    }, [filters])\n\n    const handleInput = (e) => {\n        const keyName = e.target.name\n        const keyVal = e.target.value\n        setFilters(prev => ({...prev, [keyName]: keyVal}))\n      }\n\n  return (\n    // TODO(): Clear button and clear all button\n    // TODO(): Running filters.\n    <Row className=\"g-4 justify-content-md-center\" style={{ margin: \"1rem 0rem\"}}>\n    <Col>\n    </Col>\n    <Col xs={6}>\n        <Tabs defaultActiveKey=\"phrase\" id=\"filters-menu\" className=\"mb-3\" fill>\n            <Tab eventKey=\"phrase\" title=\"Phrase filter\">\n                <Form>\n                    {/* Search by phrase - artist name */}\n                    <Form.Group>\n                        <Form.Label>Artist name</Form.Label>\n                        <Form.Control type=\"text\" name='artist' value={filters.artist} onChange={handleInput}/>\n                        <Form.Text className=\"text-muted\">\n                            It is common on Bandcamp for label to put their name as artist name.\n                            In this case try to search artist name also in album's title.\n                        </Form.Text>\n                    </Form.Group>\n\n                    {/* Search by phrase - album title */}\n                    <Form.Group>\n                        <Form.Label>Album title</Form.Label>\n                        <Form.Control type=\"text\" name='title' value={filters.title} onChange={handleInput}/>\n                        <Form.Text className=\"text-muted\">\n                            It is common for label to put artist's name in album's title field.\n                        </Form.Text>\n                    </Form.Group>\n\n                    {/* Search by phrase - genres */}\n                    <Form.Group>\n                        <Form.Label>Genres</Form.Label>\n                        <Form.Control type=\"text\" name='genres' value={filters.genres} onChange={handleInput}/>\n                        <Form.Text className=\"text-muted\">\n                            Simplified search by key value.\n                        </Form.Text>\n                    </Form.Group>\n\n                    {/* Search by phrase - label name */}\n                    <Form.Group>\n                        <Form.Label>Label name</Form.Label>\n                        <Form.Control type=\"text\" name='band_name' value={filters.band_name} onChange={handleInput}/>\n                        <Form.Text className=\"text-muted\">\n                            If an artist doesn't have label, Bandcamp assigns artist name to that field.\n                        </Form.Text>\n                    </Form.Group>\n\n                    {/* Search by phrase - label name */}\n                    <Form.Group>\n                        <Form.Label>Label origin</Form.Label>\n                        <Form.Control type=\"text\" name='label_origin' value={filters.label_origin} onChange={handleInput}/>\n                        <Form.Text className=\"text-muted\">\n                            Label or artist origin.\n                        </Form.Text>\n                    </Form.Group>\n                </Form>\n            </Tab>\n\n            <Tab eventKey=\"genres\" title=\"Genres filter\">\n                <p>Work in progress.</p>\n            </Tab>\n        </Tabs>\n        </Col>\n        <Col>\n        </Col>\n    </Row>\n  )\n}\n\nexport default Filters"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
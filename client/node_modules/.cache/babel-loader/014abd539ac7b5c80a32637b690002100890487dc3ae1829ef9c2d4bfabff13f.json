{"ast":null,"code":"var _jsxFileName = \"/home/capitalturtle/react/client/src/components/Feed.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport CardHeader from 'react-bootstrap/esm/CardHeader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Feed(_ref) {\n  _s();\n  let {\n    albums\n  } = _ref;\n  const [moreInfo, setMoreInfo] = useState({\n    tralbum_id: 0\n  });\n  const getMoreInfo = albumID => {\n    if (albumID > 0) {\n      fetch(`http://localhost:5000/details/${albumID}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => res.json()).then(data => {\n        setMoreInfo({\n          tralbum_id: data[0].tralbum_id,\n          album_description: data[0].album_description,\n          tracks_num: data[0].tracks_num\n        });\n      });\n    }\n  };\n  return [albums.map((album, i) => /*#__PURE__*/_jsxDEV(Card, {\n    id: album.tralbum_id,\n    style: {\n      width: '400px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n      style: {\n        border: \"0\",\n        width: \"400px\",\n        height: \"400px\"\n      },\n      src: `https://bandcamp.com/EmbeddedPlayer/album=${album.tralbum_id}/size=large/bgcol=ffffff/linkcol=0687f5/minimal=true/track=c/transparent=true/`,\n      seamless: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: album.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n        className: \"mb-2 text-muted\",\n        children: [\"By: \", album.artist]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Relese date: \", album.published, \",\", album.is_preorder == '1' ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \" preorder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \" buynow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Label: \", album.band_name, \", \", album.label_origin]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Price: \", album.price, \" \", album.currency]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Genres: \", album.genres.split(',').map((genre, j) => j < album.genres.split(',').length - 1 ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [genre.replace(/\\]|\\[|\\'/g, ''), \",\"]\n        }, j, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: genre.replace(/\\]|\\[|\\'/g, '')\n        }, j, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), moreInfo.tralbum_id == album.tralbum_id ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: () => {\n            setMoreInfo({\n              tralbum_id: 0\n            });\n          },\n          children: \"Hide info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Tracks: \", moreInfo.tracks_num]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description: \", moreInfo.album_description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: () => {\n          getMoreInfo(album.tralbum_id);\n        },\n        children: \"More info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this)]\n  }, album.tralbum_id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 13\n  }, this))];\n}\n_s(Feed, \"TIiEvYyNi4xzd8qvw0BPjy8ws3U=\");\n_c = Feed;\nexport default Feed;\nvar _c;\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"names":["React","useState","useEffect","Row","Button","Card","CardHeader","Feed","albums","moreInfo","setMoreInfo","tralbum_id","getMoreInfo","albumID","fetch","method","headers","then","res","json","data","album_description","tracks_num","map","album","i","width","border","height","title","artist","published","is_preorder","band_name","label_origin","price","currency","genres","split","genre","j","length","replace"],"sources":["/home/capitalturtle/react/client/src/components/Feed.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport CardHeader from 'react-bootstrap/esm/CardHeader';\n\nfunction Feed({ albums }) {\n    const [moreInfo, setMoreInfo] = useState({tralbum_id: 0})\n\n    const getMoreInfo = (albumID) => {\n        if (albumID > 0) {\n            fetch(`http://localhost:5000/details/${albumID}`, {\n                method: 'GET',\n                headers: {'Content-Type': 'application/json'}\n            }).then(res => res.json()).then(data => {\n                setMoreInfo({\n                    tralbum_id: data[0].tralbum_id,\n                    album_description: data[0].album_description,\n                    tracks_num: data[0].tracks_num\n                })\n            })\n        }\n    }\n    \n  return (\n        [albums.map((album, i) => (\n            <Card key={album.tralbum_id} id={album.tralbum_id} style={{ width: '400px' }}>\n                <iframe style={{border: \"0\", width: \"400px\", height: \"400px\"}} src={`https://bandcamp.com/EmbeddedPlayer/album=${album.tralbum_id}/size=large/bgcol=ffffff/linkcol=0687f5/minimal=true/track=c/transparent=true/`} seamless>\n                </iframe> \n                <Card.Body>\n                    <Card.Title>{album.title}</Card.Title>\n                    <Card.Subtitle className=\"mb-2 text-muted\">By: {album.artist}</Card.Subtitle>\n                </Card.Body>\n                <Card.Text>\n                    <p>Relese date: {album.published}, \n                    {(album.is_preorder == '1') ? (\n                        <span> preorder</span>\n                    ) : (\n                        <span> buynow</span>\n                    )}</p>\n                    \n                    <p>Label: {album.band_name}, {album.label_origin}</p>\n                    <p>Price: {album.price} {album.currency}</p>\n                    <p>Genres: {album.genres.split(',').map((genre, j) => (\n                        (j < album.genres.split(',').length -1) ? (\n                            <span key={j}>{genre.replace(/\\]|\\[|\\'/g, '')},</span>\n                        ) : (\n                            <span key={j}>{genre.replace(/\\]|\\[|\\'/g, '')}</span>\n                        )\n                    ))}</p>\n                    {(moreInfo.tralbum_id == album.tralbum_id) ? (\n                            <div>\n                                <Button variant=\"primary\" onClick={() => {setMoreInfo({tralbum_id: 0})}}>Hide info</Button>\n                                <p>Tracks: {moreInfo.tracks_num}</p>\n                                <p>Description: {moreInfo.album_description}</p>\n                            </div>\n                        ) : (\n                            <Button variant=\"primary\" onClick={() => {getMoreInfo(album.tralbum_id)}}>More info</Button>\n                        )}\n                </Card.Text>\n\n                    {/* <Columns.Column>\n                        <Heading size={4}></Heading>\n                        <Heading subtitle={true}></Heading>\n                        <p>Relese date: {album.published}, \n                        {(album.is_preorder == '1') ? (\n                            <span> preorder</span>\n                        ) : (\n                            <span> buynow</span>\n                        )}</p>\n                        <p>Label: {album.band_name}, {album.label_origin}</p>\n                        <p>Price: {album.price} {album.currency}</p>\n                        <p>Genres: {album.genres.split(',').map((genre, j) => (\n                            (j < album.genres.split(',').length -1) ? (\n                                <span key={j}>{genre.replace(/\\]|\\[|\\'/g, '')},</span>\n                            ) : (\n                                <span key={j}>{genre.replace(/\\]|\\[|\\'/g, '')}</span>\n                            )\n                        ))}</p>\n                        {(moreInfo.tralbum_id == album.tralbum_id) ? (\n                            <div>\n                                <Button onClick={() => {setMoreInfo({tralbum_id: 0})}}>Hide info</Button>\n                                <p>Tracks: {moreInfo.tracks_num}</p>\n                                <p>Description: {moreInfo.album_description}</p>\n                            </div>\n                        ) : (\n                            <Button onClick={() => {getMoreInfo(album.tralbum_id)}}>More info</Button>\n                        )}\n                    </Columns.Column>\n                </Columns> */}\n            </Card>\n        ))]\n  )\n}\n\nexport default Feed"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
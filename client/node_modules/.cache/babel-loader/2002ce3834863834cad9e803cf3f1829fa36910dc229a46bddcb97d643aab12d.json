{"ast":null,"code":"var _jsxFileName = \"/home/capitalturtle/react/client/src/components/Files/Files.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Table from 'react-bootstrap/Table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Files(_ref) {\n  _s();\n  let {\n    showFilesModal,\n    setFilesModuleFromChild\n  } = _ref;\n  const [files, setFiles] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:5000/show_files\", {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(files => {\n      setFiles(files);\n    });\n  }, []);\n\n  // const sendCredentials = () => {\n  //     fetch(\"http://localhost:5000/update_credentials\", {\n  //         method: 'POST',\n  //         headers: {'Content-Type': 'application/json'},\n  //         mode: 'cors',\n  //         body: JSON.stringify({\"credentials\": input})\n  //     })\n  // }\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: showFilesModal,\n    onHide: () => {\n      setFilesModuleFromChild(false);\n    },\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Files API credentials\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Current\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Albums num\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Genres\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Sort\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Spotify\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), files.map((f, i) => {\n          /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: f.fetch_date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: f.is_current\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: f.items\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: f.genres\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: f.sort\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: f.spotify_search\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Client ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            name: \"client_id\",\n            value: input.client_id,\n            onChange: handleInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            className: \"text-muted\",\n            children: \"Maybe some help here?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Client secret\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            name: \"client_secret\",\n            value: input.client_secret,\n            onChange: handleInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            className: \"text-muted\",\n            children: \"And here?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: () => {\n          setFilesModuleFromChild(false);\n        },\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(Files, \"Q2RYUcr07MgGv5yVCV31YurpQrA=\");\n_c = Files;\nexport default Files;\nvar _c;\n$RefreshReg$(_c, \"Files\");","map":{"version":3,"names":["React","useState","useEffect","Modal","Button","Form","Table","Files","showFilesModal","setFilesModuleFromChild","files","setFiles","fetch","method","headers","then","res","json","map","f","i","fetch_date","is_current","items","genres","sort","spotify_search","input","client_id","handleInput","client_secret"],"sources":["/home/capitalturtle/react/client/src/components/Files/Files.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Table from 'react-bootstrap/Table';\n\nfunction Files({ showFilesModal, setFilesModuleFromChild }) {\n    const [files, setFiles] = useState([])\n\n    useEffect(() => {\n        fetch(\"http://localhost:5000/show_files\", {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(res => res.json())\n            .then(files => {setFiles(files)})\n    }, [])\n\n    // const sendCredentials = () => {\n    //     fetch(\"http://localhost:5000/update_credentials\", {\n    //         method: 'POST',\n    //         headers: {'Content-Type': 'application/json'},\n    //         mode: 'cors',\n    //         body: JSON.stringify({\"credentials\": input})\n    //     })\n    // }\n  return (\n    <Modal show={showFilesModal} onHide={() => {setFilesModuleFromChild(false)}}>\n        <Modal.Header closeButton>\n            <Modal.Title>Files API credentials</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        <Table striped>\n            <thead>\n                <tr>\n                    <th>Date</th>\n                    <th>Current</th>\n                    <th>Albums num</th>\n                    <th>Genres</th>\n                    <th>Sort</th>\n                    <th>Spotify</th>\n                </tr>\n            </thead>\n            {files.map((f, i) => {\n                <tbody>\n                    <tr>\n                        <td>{f.fetch_date}</td>\n                        <td>{f.is_current}</td>\n                        <td>{f.items}</td>\n                        <td>{f.genres}</td>\n                        <td>{f.sort}</td>\n                        <td>{f.spotify_search}</td>\n                    </tr>\n                </tbody>\n            })}\n        </Table>\n            <Form>\n                {/* Client ID */}\n                <Form.Group>\n                    <Form.Label>Client ID</Form.Label>\n                    <Form.Control type=\"text\" name='client_id' value={input.client_id} onChange={handleInput}/>\n                    <Form.Text className=\"text-muted\">\n                        Maybe some help here?\n                    </Form.Text>\n                </Form.Group>\n\n                {/* Client secret */}\n                <Form.Group>\n                    <Form.Label>Client secret</Form.Label>\n                    <Form.Control type=\"text\" name='client_secret' value={input.client_secret} onChange={handleInput}/>\n                    <Form.Text className=\"text-muted\">\n                        And here?\n                    </Form.Text>\n                </Form.Group>\n            </Form>\n        </Modal.Body>\n        <Modal.Footer>\n            \n                <Button variant=\"primary\" onClick={() => {setFilesModuleFromChild(false)}}>Close</Button>\n        </Modal.Footer>\n    </Modal>\n  )\n}\n\nexport default Files"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
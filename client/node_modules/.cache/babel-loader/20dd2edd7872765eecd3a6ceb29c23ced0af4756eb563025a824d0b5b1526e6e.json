{"ast":null,"code":"var _jsxFileName = \"/home/capitalturtle/react/client/src/components/Spotify/Spotify.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Spotify(_ref) {\n  _s();\n  let {\n    showSpotifyModal,\n    setSearchSpotifyFromChild\n  } = _ref;\n  const [input, setInput] = useState({\n    client_id: '',\n    client_secret: ''\n  });\n  const handleInput = e => {\n    const keyName = e.target.name;\n    const keyVal = e.target.value;\n    setInput(prev => ({\n      ...prev,\n      [keyName]: keyVal\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: showSearchModal,\n    onHide: () => {\n      setSearchModuleFromChild(false);\n    },\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Spotify API credentials\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Client ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          name: \"client_id\",\n          value: input.client_id,\n          onChange: handleInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-muted\",\n          children: \"Maybe some help here?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Client secret\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          name: \"client_secret\",\n          value: input.client_secret,\n          onChange: handleInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-muted\",\n          children: \"And here?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        onClick: sendSearchQuery,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: () => {\n          setSearchModuleFromChild(false);\n        },\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(Spotify, \"o0rEqhcxjeJrJ18fnZxRBKAQn3Q=\");\n_c = Spotify;\nexport default Spotify;\nvar _c;\n$RefreshReg$(_c, \"Spotify\");","map":{"version":3,"names":["React","useState","Modal","Spotify","showSpotifyModal","setSearchSpotifyFromChild","input","setInput","client_id","client_secret","handleInput","e","keyName","target","name","keyVal","value","prev","showSearchModal","setSearchModuleFromChild","sendSearchQuery"],"sources":["/home/capitalturtle/react/client/src/components/Spotify/Spotify.js"],"sourcesContent":["import React, { useState } from 'react'\n\nimport Modal from 'react-bootstrap/Modal';\n\nfunction Spotify({ showSpotifyModal, setSearchSpotifyFromChild }) {\n    const [input, setInput] = useState({\n        client_id: '',\n        client_secret: ''\n    })\n\nconst handleInput = (e) => {\n    const keyName = e.target.name\n    const keyVal = e.target.value\n    setInput(prev => ({...prev, [keyName]: keyVal}))\n    }\n  return (\n    <Modal show={showSearchModal} onHide={() => {setSearchModuleFromChild(false)}}>\n    <Modal.Header closeButton>\n        <Modal.Title>Spotify API credentials</Modal.Title>\n    </Modal.Header>\n    <Modal.Body>\n\n        {/* Client ID */}\n        <Form.Group>\n            <Form.Label>Client ID</Form.Label>\n            <Form.Control type=\"text\" name='client_id' value={input.client_id} onChange={handleInput}/>\n            <Form.Text className=\"text-muted\">\n                Maybe some help here?\n            </Form.Text>\n        </Form.Group>\n\n        {/* Client secret */}\n        <Form.Group>\n            <Form.Label>Client secret</Form.Label>\n            <Form.Control type=\"text\" name='client_secret' value={input.client_secret} onChange={handleInput}/>\n            <Form.Text className=\"text-muted\">\n                And here?\n            </Form.Text>\n        </Form.Group>\n\n\n    </Modal.Body>\n        <Modal.Footer>\n            <Button variant=\"primary\" type=\"submit\" onClick={sendSearchQuery}>Search</Button>\n            <Button variant=\"primary\" onClick={() => {setSearchModuleFromChild(false)}}>Close</Button>\n        </Modal.Footer>\n    </Modal>\n  )\n}\n\nexport default Spotify"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,KAAK,MAAM,uBAAuB;AAAC;AAE1C,SAASC,OAAO,OAAkD;EAAA;EAAA,IAAjD;IAAEC,gBAAgB;IAAEC;EAA0B,CAAC;EAC5D,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC;IAC/BO,SAAS,EAAE,EAAE;IACbC,aAAa,EAAE;EACnB,CAAC,CAAC;EAEN,MAAMC,WAAW,GAAIC,CAAC,IAAK;IACvB,MAAMC,OAAO,GAAGD,CAAC,CAACE,MAAM,CAACC,IAAI;IAC7B,MAAMC,MAAM,GAAGJ,CAAC,CAACE,MAAM,CAACG,KAAK;IAC7BT,QAAQ,CAACU,IAAI,KAAK;MAAC,GAAGA,IAAI;MAAE,CAACL,OAAO,GAAGG;IAAM,CAAC,CAAC,CAAC;EAChD,CAAC;EACH,oBACE,QAAC,KAAK;IAAC,IAAI,EAAEG,eAAgB;IAAC,MAAM,EAAE,MAAM;MAACC,wBAAwB,CAAC,KAAK,CAAC;IAAA,CAAE;IAAA,wBAC9E,QAAC,KAAK,CAAC,MAAM;MAAC,WAAW;MAAA,uBACrB,QAAC,KAAK,CAAC,KAAK;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAsC;MAAA;MAAA;MAAA;IAAA,QACvC,eACf,QAAC,KAAK,CAAC,IAAI;MAAA,wBAGP,QAAC,IAAI,CAAC,KAAK;QAAA,wBACP,QAAC,IAAI,CAAC,KAAK;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAuB,eAClC,QAAC,IAAI,CAAC,OAAO;UAAC,IAAI,EAAC,MAAM;UAAC,IAAI,EAAC,WAAW;UAAC,KAAK,EAAEb,KAAK,CAACE,SAAU;UAAC,QAAQ,EAAEE;QAAY;UAAA;UAAA;UAAA;QAAA,QAAE,eAC3F,QAAC,IAAI,CAAC,IAAI;UAAC,SAAS,EAAC,YAAY;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAErB;MAAA;QAAA;QAAA;QAAA;MAAA,QACH,eAGb,QAAC,IAAI,CAAC,KAAK;QAAA,wBACP,QAAC,IAAI,CAAC,KAAK;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAA2B,eACtC,QAAC,IAAI,CAAC,OAAO;UAAC,IAAI,EAAC,MAAM;UAAC,IAAI,EAAC,eAAe;UAAC,KAAK,EAAEJ,KAAK,CAACG,aAAc;UAAC,QAAQ,EAAEC;QAAY;UAAA;UAAA;UAAA;QAAA,QAAE,eACnG,QAAC,IAAI,CAAC,IAAI;UAAC,SAAS,EAAC,YAAY;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAErB;MAAA;QAAA;QAAA;QAAA;MAAA,QACH;IAAA;MAAA;MAAA;MAAA;IAAA,QAGJ,eACT,QAAC,KAAK,CAAC,MAAM;MAAA,wBACT,QAAC,MAAM;QAAC,OAAO,EAAC,SAAS;QAAC,IAAI,EAAC,QAAQ;QAAC,OAAO,EAAEU,eAAgB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgB,eACjF,QAAC,MAAM;QAAC,OAAO,EAAC,SAAS;QAAC,OAAO,EAAE,MAAM;UAACD,wBAAwB,CAAC,KAAK,CAAC;QAAA,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAe;IAAA;MAAA;MAAA;MAAA;IAAA,QAC/E;EAAA;IAAA;IAAA;IAAA;EAAA,QACX;AAEZ;AAAC,GA5CQhB,OAAO;AAAA,KAAPA,OAAO;AA8ChB,eAAeA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
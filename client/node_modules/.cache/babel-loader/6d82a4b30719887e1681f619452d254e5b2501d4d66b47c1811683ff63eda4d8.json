{"ast":null,"code":"function FiltersLibrary(albums, filterDict) {\n  this.albums = albums;\n  this.filterDict = filterDict;\n  this.match = [];\n}\n\n// Filter by given value in specified fields\n_c = FiltersLibrary;\nFiltersLibrary.prototype.byKey = function (dictParam, fieldsToSearch) {\n  var searchVal = this.filterDict[dictParam];\n  for (let a of this.albums) {\n    fieldsToSearch.forEach(field => {\n      if (a[field].toLowerCase().includes(searchVal)) {\n        this.match.push(a.tralbum_id);\n      }\n    });\n  }\n};\nFiltersLibrary.prototype.byDate = function (dictParam, mode) {\n  var searchVal = this.filterDict[dictParam];\n  for (let a of this.albums) {\n    if (new Date(a.published) > new Date(searchVal) && mode === 'byDateStart') {\n      this.match.push(a.tralbum_id);\n    } else if (new Date(a.published) < new Date(searchVal) && mode === 'byDateEnd') {\n      this.match.push(a.tralbum_id);\n    }\n  }\n};\nFiltersLibrary.prototype.manage = function () {\n  for (let key in this.filterDict) {\n    var searchVal = this.filterDict[key];\n    var keySearch = ['artist', 'title', 'genres', 'band_name', 'album_description', 'label_origin'];\n    if (searchVal.length > 0) {\n      switch (key) {\n        case keySearch[0]:\n        case keySearch[1]:\n        case keySearch[2]:\n        case keySearch[3]:\n        case keySearch[4]:\n        case keySearch[5]:\n          this.byKey(searchVal, key);\n          break;\n        case 'byKey':\n          this.byKey(searchVal, keySearch);\n          break;\n        case 'byDateStart':\n        case 'byDateEnd':\n          this.byDate(searchVal, key);\n          break;\n      }\n    }\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"FiltersLibrary\");","map":{"version":3,"names":["FiltersLibrary","albums","filterDict","match","prototype","byKey","dictParam","fieldsToSearch","searchVal","a","forEach","field","toLowerCase","includes","push","tralbum_id","byDate","mode","Date","published","manage","key","keySearch","length"],"sources":["/home/capitalturtle/react/client/src/components/FiltersLibrary.js"],"sourcesContent":["function FiltersLibrary(albums, filterDict) {\n    this.albums = albums\n    this.filterDict = filterDict\n    this.match = []\n}\n\n// Filter by given value in specified fields\nFiltersLibrary.prototype.byKey = function(dictParam, fieldsToSearch) {\n    var searchVal = this.filterDict[dictParam]\n    for (let a of this.albums) {\n        fieldsToSearch.forEach((field) => {\n            if (a[field].toLowerCase().includes(searchVal)) {\n                this.match.push(a.tralbum_id)\n            }\n        })\n    }\n}\n\nFiltersLibrary.prototype.byDate = function(dictParam, mode) {\n    var searchVal = this.filterDict[dictParam]\n    for (let a of this.albums) {\n        if ((new Date(a.published) > new Date(searchVal) && (mode === 'byDateStart'))) {\n            this.match.push(a.tralbum_id)\n        } else if ((new Date(a.published) < new Date(searchVal) && (mode === 'byDateEnd'))) {\n            this.match.push(a.tralbum_id)\n        }\n    }\n}\n\nFiltersLibrary.prototype.manage = function() {\n    for (let key in this.filterDict) {\n        var searchVal = this.filterDict[key]\n        var keySearch = ['artist', 'title', 'genres', 'band_name', 'album_description', 'label_origin']\n        if (searchVal.length > 0) {\n            switch(key) {\n                case keySearch[0]:\n                case keySearch[1]:\n                case keySearch[2]:\n                case keySearch[3]:\n                case keySearch[4]:\n                case keySearch[5]:\n                    this.byKey(searchVal, key)\n                    break\n                case 'byKey':\n                    \n                    this.byKey(searchVal, keySearch)\n                    break\n                case 'byDateStart':\n                case 'byDateEnd':\n                    this.byDate(searchVal, key)\n                    break\n            }\n        }\n    }\n}"],"mappings":"AAAA,SAASA,cAAc,CAACC,MAAM,EAAEC,UAAU,EAAE;EACxC,IAAI,CAACD,MAAM,GAAGA,MAAM;EACpB,IAAI,CAACC,UAAU,GAAGA,UAAU;EAC5B,IAAI,CAACC,KAAK,GAAG,EAAE;AACnB;;AAEA;AAAA,KANSH,cAAc;AAOvBA,cAAc,CAACI,SAAS,CAACC,KAAK,GAAG,UAASC,SAAS,EAAEC,cAAc,EAAE;EACjE,IAAIC,SAAS,GAAG,IAAI,CAACN,UAAU,CAACI,SAAS,CAAC;EAC1C,KAAK,IAAIG,CAAC,IAAI,IAAI,CAACR,MAAM,EAAE;IACvBM,cAAc,CAACG,OAAO,CAAEC,KAAK,IAAK;MAC9B,IAAIF,CAAC,CAACE,KAAK,CAAC,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACL,SAAS,CAAC,EAAE;QAC5C,IAAI,CAACL,KAAK,CAACW,IAAI,CAACL,CAAC,CAACM,UAAU,CAAC;MACjC;IACJ,CAAC,CAAC;EACN;AACJ,CAAC;AAEDf,cAAc,CAACI,SAAS,CAACY,MAAM,GAAG,UAASV,SAAS,EAAEW,IAAI,EAAE;EACxD,IAAIT,SAAS,GAAG,IAAI,CAACN,UAAU,CAACI,SAAS,CAAC;EAC1C,KAAK,IAAIG,CAAC,IAAI,IAAI,CAACR,MAAM,EAAE;IACvB,IAAK,IAAIiB,IAAI,CAACT,CAAC,CAACU,SAAS,CAAC,GAAG,IAAID,IAAI,CAACV,SAAS,CAAC,IAAKS,IAAI,KAAK,aAAc,EAAG;MAC3E,IAAI,CAACd,KAAK,CAACW,IAAI,CAACL,CAAC,CAACM,UAAU,CAAC;IACjC,CAAC,MAAM,IAAK,IAAIG,IAAI,CAACT,CAAC,CAACU,SAAS,CAAC,GAAG,IAAID,IAAI,CAACV,SAAS,CAAC,IAAKS,IAAI,KAAK,WAAY,EAAG;MAChF,IAAI,CAACd,KAAK,CAACW,IAAI,CAACL,CAAC,CAACM,UAAU,CAAC;IACjC;EACJ;AACJ,CAAC;AAEDf,cAAc,CAACI,SAAS,CAACgB,MAAM,GAAG,YAAW;EACzC,KAAK,IAAIC,GAAG,IAAI,IAAI,CAACnB,UAAU,EAAE;IAC7B,IAAIM,SAAS,GAAG,IAAI,CAACN,UAAU,CAACmB,GAAG,CAAC;IACpC,IAAIC,SAAS,GAAG,CAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAE,mBAAmB,EAAE,cAAc,CAAC;IAC/F,IAAId,SAAS,CAACe,MAAM,GAAG,CAAC,EAAE;MACtB,QAAOF,GAAG;QACN,KAAKC,SAAS,CAAC,CAAC,CAAC;QACjB,KAAKA,SAAS,CAAC,CAAC,CAAC;QACjB,KAAKA,SAAS,CAAC,CAAC,CAAC;QACjB,KAAKA,SAAS,CAAC,CAAC,CAAC;QACjB,KAAKA,SAAS,CAAC,CAAC,CAAC;QACjB,KAAKA,SAAS,CAAC,CAAC,CAAC;UACb,IAAI,CAACjB,KAAK,CAACG,SAAS,EAAEa,GAAG,CAAC;UAC1B;QACJ,KAAK,OAAO;UAER,IAAI,CAAChB,KAAK,CAACG,SAAS,EAAEc,SAAS,CAAC;UAChC;QACJ,KAAK,aAAa;QAClB,KAAK,WAAW;UACZ,IAAI,CAACN,MAAM,CAACR,SAAS,EAAEa,GAAG,CAAC;UAC3B;MAAK;IAEjB;EACJ;AACJ,CAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"class FiltersLibrary {\n  constructor(albums, filterDict) {\n    this.albums = albums;\n    this.filterDict = filterDict;\n    this.match = [];\n  }\n\n  // Filter by given value in specified fields\n  byKey(dictParam, fieldsToSearch) {\n    var searchVal = this.filterDict[dictParam].toLowerCase();\n    for (let a of this.albums) {\n      fieldsToSearch.forEach(field => {\n        if (a[field].toLowerCase().includes(searchVal)) {\n          this.match.push(a);\n        }\n      });\n    }\n  }\n  byDate(dictParam, mode) {\n    var searchVal = this.filterDict[dictParam];\n    for (let a of this.albums) {\n      if (new Date(a.published) > new Date(searchVal) && dictParam === 'byDateStart') {\n        this.match.push(a);\n      } else if (new Date(a.published) < new Date(searchVal) && dictParam === 'byDateEnd') {\n        this.match.push(a);\n      }\n    }\n  }\n  manage() {\n    for (let key in this.filterDict) {\n      var keySearch = ['artist', 'title', 'genres', 'band_name', 'album_description', 'label_origin'];\n      if (this.filterDict[key].length > 0) {\n        switch (key) {\n          case keySearch[0]:\n          case keySearch[1]:\n          case keySearch[2]:\n          case keySearch[3]:\n          case keySearch[4]:\n          case keySearch[5]:\n            this.byKey(key, [key]);\n            break;\n          case 'byKey':\n            this.byKey(key, keySearch);\n            break;\n          case 'byDateStart':\n          case 'byDateEnd':\n            this.byDate(key);\n            break;\n        }\n      }\n    }\n    var toReturn = new Set(this.match);\n    return toReturn;\n  }\n}\nexport default FiltersLibrary;","map":{"version":3,"names":["FiltersLibrary","constructor","albums","filterDict","match","byKey","dictParam","fieldsToSearch","searchVal","toLowerCase","a","forEach","field","includes","push","byDate","mode","Date","published","manage","key","keySearch","length","toReturn","Set"],"sources":["/home/capitalturtle/react/client/src/components/FiltersLibrary.js"],"sourcesContent":["class FiltersLibrary {\n    constructor(albums, filterDict) {\n        this.albums = albums\n        this.filterDict = filterDict\n        this.match = []\n    }\n\n    // Filter by given value in specified fields\n    byKey(dictParam, fieldsToSearch) {\n        var searchVal = this.filterDict[dictParam].toLowerCase()\n        for (let a of this.albums) {\n            fieldsToSearch.forEach((field) => {\n                if (a[field].toLowerCase().includes(searchVal)) {\n                    this.match.push(a)\n                }\n            })\n        }\n    }\n\n    byDate(dictParam, mode) {\n        var searchVal = this.filterDict[dictParam]\n        for (let a of this.albums) {\n            if ((new Date(a.published) > new Date(searchVal) && (dictParam === 'byDateStart'))) {\n                this.match.push(a)\n            } else if ((new Date(a.published) < new Date(searchVal) && (dictParam === 'byDateEnd'))) {\n                this.match.push(a)\n            }\n        }\n    }\n\n    manage() {\n        for (let key in this.filterDict) {\n            var keySearch = ['artist', 'title', 'genres', 'band_name', 'album_description', 'label_origin']\n            if (this.filterDict[key].length > 0) {\n                switch(key) {\n                    case keySearch[0]:\n                    case keySearch[1]:\n                    case keySearch[2]:\n                    case keySearch[3]:\n                    case keySearch[4]:\n                    case keySearch[5]:\n                        this.byKey(key, [key])\n                        break\n                    case 'byKey':\n                        this.byKey(key, keySearch)\n                        break\n                    case 'byDateStart':\n                    case 'byDateEnd':\n                        this.byDate(key)\n                        break\n                }\n            }\n        }\n        var toReturn = new Set(this.match)\n        return toReturn\n    }\n}\n\nexport default FiltersLibrary"],"mappings":"AAAA,MAAMA,cAAc,CAAC;EACjBC,WAAW,CAACC,MAAM,EAAEC,UAAU,EAAE;IAC5B,IAAI,CAACD,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACC,KAAK,GAAG,EAAE;EACnB;;EAEA;EACAC,KAAK,CAACC,SAAS,EAAEC,cAAc,EAAE;IAC7B,IAAIC,SAAS,GAAG,IAAI,CAACL,UAAU,CAACG,SAAS,CAAC,CAACG,WAAW,EAAE;IACxD,KAAK,IAAIC,CAAC,IAAI,IAAI,CAACR,MAAM,EAAE;MACvBK,cAAc,CAACI,OAAO,CAAEC,KAAK,IAAK;QAC9B,IAAIF,CAAC,CAACE,KAAK,CAAC,CAACH,WAAW,EAAE,CAACI,QAAQ,CAACL,SAAS,CAAC,EAAE;UAC5C,IAAI,CAACJ,KAAK,CAACU,IAAI,CAACJ,CAAC,CAAC;QACtB;MACJ,CAAC,CAAC;IACN;EACJ;EAEAK,MAAM,CAACT,SAAS,EAAEU,IAAI,EAAE;IACpB,IAAIR,SAAS,GAAG,IAAI,CAACL,UAAU,CAACG,SAAS,CAAC;IAC1C,KAAK,IAAII,CAAC,IAAI,IAAI,CAACR,MAAM,EAAE;MACvB,IAAK,IAAIe,IAAI,CAACP,CAAC,CAACQ,SAAS,CAAC,GAAG,IAAID,IAAI,CAACT,SAAS,CAAC,IAAKF,SAAS,KAAK,aAAc,EAAG;QAChF,IAAI,CAACF,KAAK,CAACU,IAAI,CAACJ,CAAC,CAAC;MACtB,CAAC,MAAM,IAAK,IAAIO,IAAI,CAACP,CAAC,CAACQ,SAAS,CAAC,GAAG,IAAID,IAAI,CAACT,SAAS,CAAC,IAAKF,SAAS,KAAK,WAAY,EAAG;QACrF,IAAI,CAACF,KAAK,CAACU,IAAI,CAACJ,CAAC,CAAC;MACtB;IACJ;EACJ;EAEAS,MAAM,GAAG;IACL,KAAK,IAAIC,GAAG,IAAI,IAAI,CAACjB,UAAU,EAAE;MAC7B,IAAIkB,SAAS,GAAG,CAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAE,mBAAmB,EAAE,cAAc,CAAC;MAC/F,IAAI,IAAI,CAAClB,UAAU,CAACiB,GAAG,CAAC,CAACE,MAAM,GAAG,CAAC,EAAE;QACjC,QAAOF,GAAG;UACN,KAAKC,SAAS,CAAC,CAAC,CAAC;UACjB,KAAKA,SAAS,CAAC,CAAC,CAAC;UACjB,KAAKA,SAAS,CAAC,CAAC,CAAC;UACjB,KAAKA,SAAS,CAAC,CAAC,CAAC;UACjB,KAAKA,SAAS,CAAC,CAAC,CAAC;UACjB,KAAKA,SAAS,CAAC,CAAC,CAAC;YACb,IAAI,CAAChB,KAAK,CAACe,GAAG,EAAE,CAACA,GAAG,CAAC,CAAC;YACtB;UACJ,KAAK,OAAO;YACR,IAAI,CAACf,KAAK,CAACe,GAAG,EAAEC,SAAS,CAAC;YAC1B;UACJ,KAAK,aAAa;UAClB,KAAK,WAAW;YACZ,IAAI,CAACN,MAAM,CAACK,GAAG,CAAC;YAChB;QAAK;MAEjB;IACJ;IACA,IAAIG,QAAQ,GAAG,IAAIC,GAAG,CAAC,IAAI,CAACpB,KAAK,CAAC;IAClC,OAAOmB,QAAQ;EACnB;AACJ;AAEA,eAAevB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/capitalturtle/react/client/src/components/Spotify/Spotify.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Spotify(_ref) {\n  _s();\n  let {\n    showSpotifyModal,\n    setSpotifyModuleFromChild\n  } = _ref;\n  const [input, setInput] = useState({\n    client_id: '',\n    client_secret: ''\n  });\n  const handleInput = e => {\n    const keyName = e.target.name;\n    const keyVal = e.target.value;\n    setInput(prev => ({\n      ...prev,\n      [keyName]: keyVal\n    }));\n  };\n  const sendCredentials = () => {\n    fetch(\"http://localhost:5000/update_credentials\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      mode: 'cors',\n      body: JSON.stringify({\n        \"credentials\": input\n      })\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: showSpotifyModal,\n    onHide: () => {\n      setSpotifyModuleFromChild(false);\n    },\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Spotify API credentials\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Client ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            name: \"client_id\",\n            value: input.client_id,\n            onChange: handleInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            className: \"text-muted\",\n            children: \"Maybe some help here?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Client secret\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            name: \"client_secret\",\n            value: input.client_secret,\n            onChange: handleInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            className: \"text-muted\",\n            children: \"And here?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        onClick: () => {\n          sendCredentials();\n          setSpotifyModuleFromChild(false);\n        },\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: () => {\n          setSpotifyModuleFromChild(false);\n        },\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(Spotify, \"o0rEqhcxjeJrJ18fnZxRBKAQn3Q=\");\n_c = Spotify;\nexport default Spotify;\nvar _c;\n$RefreshReg$(_c, \"Spotify\");","map":{"version":3,"names":["React","useState","Modal","Button","Form","Spotify","showSpotifyModal","setSpotifyModuleFromChild","input","setInput","client_id","client_secret","handleInput","e","keyName","target","name","keyVal","value","prev","sendCredentials","fetch","method","headers","mode","body","JSON","stringify"],"sources":["/home/capitalturtle/react/client/src/components/Spotify/Spotify.js"],"sourcesContent":["import React, { useState } from 'react'\n\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\nfunction Spotify({ showSpotifyModal, setSpotifyModuleFromChild }) {\n    const [input, setInput] = useState({\n        client_id: '',\n        client_secret: ''\n    })\n\n    const handleInput = (e) => {\n        const keyName = e.target.name\n        const keyVal = e.target.value\n        setInput(prev => ({...prev, [keyName]: keyVal}))\n    }\n\n    const sendCredentials = () => {\n        fetch(\"http://localhost:5000/update_credentials\", {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            mode: 'cors',\n            body: JSON.stringify({\"credentials\": input})\n        })\n    }\n  return (\n    <Modal show={showSpotifyModal} onHide={() => {setSpotifyModuleFromChild(false)}}>\n        <Modal.Header closeButton>\n            <Modal.Title>Spotify API credentials</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            <Form>\n                {/* Client ID */}\n                <Form.Group>\n                    <Form.Label>Client ID</Form.Label>\n                    <Form.Control type=\"text\" name='client_id' value={input.client_id} onChange={handleInput}/>\n                    <Form.Text className=\"text-muted\">\n                        Maybe some help here?\n                    </Form.Text>\n                </Form.Group>\n\n                {/* Client secret */}\n                <Form.Group>\n                    <Form.Label>Client secret</Form.Label>\n                    <Form.Control type=\"text\" name='client_secret' value={input.client_secret} onChange={handleInput}/>\n                    <Form.Text className=\"text-muted\">\n                        And here?\n                    </Form.Text>\n                </Form.Group>\n            </Form>\n        </Modal.Body>\n        <Modal.Footer>\n            \n            <Button variant=\"primary\" type=\"submit\" onClick={() => {\n                sendCredentials()\n                setSpotifyModuleFromChild(false)\n                }}>\n                    Save</Button>\n                <Button variant=\"primary\" onClick={() => {setSpotifyModuleFromChild(false)}}>Close</Button>\n        </Modal.Footer>\n    </Modal>\n  )\n}\n\nexport default Spotify"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
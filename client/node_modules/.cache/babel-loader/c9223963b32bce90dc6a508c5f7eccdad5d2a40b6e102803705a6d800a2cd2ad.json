{"ast":null,"code":"var _jsxFileName = \"/home/capitalturtle/react/client/src/components/Feed.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Heading, Button } from 'react-bulma-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Feed(_ref) {\n  _s();\n  let {\n    albums\n  } = _ref;\n  const [moreInfo, setMoreInfo] = useState({\n    tralbum_id: 0,\n    band_name: \"\",\n    label_origin: \"\",\n    price: \"\",\n    currency: \"\",\n    tracks_num: 0,\n    album_description: \"\"\n  });\n  return [albums.map((album, i) => /*#__PURE__*/_jsxDEV(Box, {\n    id: album.tralbum_id,\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      size: 4,\n      children: album.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Heading, {\n      subtitle: true,\n      children: [\"By: \", album.artist]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Relese date: \", album.published, album.is_preorder == '1' ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" preorder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" buynow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Genres: \", album.genres.split(',').map((genre, j) => j < album.genres.split(',').length - 1 ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [genre.replace(/\\]|\\[|\\'/g, ''), \",\"]\n      }, j, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: genre.replace(/\\]|\\[|\\'/g, '')\n      }, j, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this), moreInfo.length > 0 && Number(moreInfo.tralbum_id) == album.tralbum_id ? /*#__PURE__*/_jsxDEV(Button, {\n      onClick: console.log(moreInfo),\n      children: \"Hide info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        fetch(`http://localhost:5000/details/${album.tralbum_id}`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }).then(res => res.json()).then(moreInfo => setMoreInfo(moreInfo[0])).then(console.log(moreInfo));\n      },\n      children: \"More info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }, this)]\n  }, album.tralbum_id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 13\n  }, this))];\n}\n_s(Feed, \"lCJEXEUM7RSpApeon+1OlgXTq0c=\");\n_c = Feed;\nexport default Feed;\nvar _c;\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"names":["React","useState","useEffect","Box","Heading","Button","Feed","albums","moreInfo","setMoreInfo","tralbum_id","band_name","label_origin","price","currency","tracks_num","album_description","map","album","i","title","artist","published","is_preorder","genres","split","genre","j","length","replace","Number","console","log","fetch","method","headers","then","res","json"],"sources":["/home/capitalturtle/react/client/src/components/Feed.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Box, Heading, Button } from 'react-bulma-components';\n\nfunction Feed({ albums }) {\n    const [moreInfo, setMoreInfo] = useState({\n        tralbum_id: 0,\n        band_name: \"\",\n        label_origin: \"\",\n        price: \"\",\n        currency: \"\",\n        tracks_num: 0,\n        album_description: \"\"\n    })\n\n  return (\n        [albums.map((album, i) => (\n            <Box key={album.tralbum_id} id={album.tralbum_id}>\n                <Heading size={4}>{album.title}</Heading>\n                <Heading subtitle={true}>By: {album.artist}</Heading>\n                <p>Relese date: {album.published} \n                {(album.is_preorder == '1') ? (\n                    <span> preorder</span>\n                ) : (\n                    <span> buynow</span>\n                )}</p>\n                <p>Genres: {album.genres.split(',').map((genre, j) => (\n                    (j < album.genres.split(',').length -1) ? (\n                        <span key={j}>{genre.replace(/\\]|\\[|\\'/g, '')},</span>\n                    ) : (\n                        <span key={j}>{genre.replace(/\\]|\\[|\\'/g, '')}</span>\n                    )\n                ))}</p>\n                {(moreInfo.length > 0 && Number(moreInfo.tralbum_id) == album.tralbum_id) ? (\n                    <Button onClick={console.log(moreInfo)}>Hide info</Button>\n                    \n                ) : (\n                    <Button onClick={() => {\n                        fetch(`http://localhost:5000/details/${album.tralbum_id}`, {\n                            method: 'GET',\n                            headers: {'Content-Type': 'application/json'}\n                        }).then(res => res.json()).then(moreInfo => setMoreInfo(moreInfo[0]))\n                        .then(console.log(moreInfo))\n                    }}>More info</Button>\n                )\n                }\n\n            </Box>\n        ))]\n  )\n}\n\nexport default Feed"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,GAAG,EAAEC,OAAO,EAAEC,MAAM,QAAQ,wBAAwB;AAAC;AAE9D,SAASC,IAAI,OAAa;EAAA;EAAA,IAAZ;IAAEC;EAAO,CAAC;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC;IACrCS,UAAU,EAAE,CAAC;IACbC,SAAS,EAAE,EAAE;IACbC,YAAY,EAAE,EAAE;IAChBC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,CAAC;IACbC,iBAAiB,EAAE;EACvB,CAAC,CAAC;EAEJ,OACM,CAACT,MAAM,CAACU,GAAG,CAAC,CAACC,KAAK,EAAEC,CAAC,kBACjB,QAAC,GAAG;IAAwB,EAAE,EAAED,KAAK,CAACR,UAAW;IAAA,wBAC7C,QAAC,OAAO;MAAC,IAAI,EAAE,CAAE;MAAA,UAAEQ,KAAK,CAACE;IAAK;MAAA;MAAA;MAAA;IAAA,QAAW,eACzC,QAAC,OAAO;MAAC,QAAQ,EAAE,IAAK;MAAA,mBAAMF,KAAK,CAACG,MAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QAAW,eACrD;MAAA,4BAAiBH,KAAK,CAACI,SAAS,EAC9BJ,KAAK,CAACK,WAAW,IAAI,GAAG,gBACtB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAsB,gBAEtB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QACH;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eACN;MAAA,uBAAYL,KAAK,CAACM,MAAM,CAACC,KAAK,CAAC,GAAG,CAAC,CAACR,GAAG,CAAC,CAACS,KAAK,EAAEC,CAAC,KAC5CA,CAAC,GAAGT,KAAK,CAACM,MAAM,CAACC,KAAK,CAAC,GAAG,CAAC,CAACG,MAAM,GAAE,CAAC,gBAClC;QAAA,WAAeF,KAAK,CAACG,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC;MAAA,GAAlCF,CAAC;QAAA;QAAA;QAAA;MAAA,QAA0C,gBAEtD;QAAA,UAAeD,KAAK,CAACG,OAAO,CAAC,WAAW,EAAE,EAAE;MAAC,GAAlCF,CAAC;QAAA;QAAA;QAAA;MAAA,QAEnB,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,EACLnB,QAAQ,CAACoB,MAAM,GAAG,CAAC,IAAIE,MAAM,CAACtB,QAAQ,CAACE,UAAU,CAAC,IAAIQ,KAAK,CAACR,UAAU,gBACpE,QAAC,MAAM;MAAC,OAAO,EAAEqB,OAAO,CAACC,GAAG,CAACxB,QAAQ,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAmB,gBAG1D,QAAC,MAAM;MAAC,OAAO,EAAE,MAAM;QACnByB,KAAK,CAAE,iCAAgCf,KAAK,CAACR,UAAW,EAAC,EAAE;UACvDwB,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YAAC,cAAc,EAAE;UAAkB;QAChD,CAAC,CAAC,CAACC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CAACF,IAAI,CAAC5B,QAAQ,IAAIC,WAAW,CAACD,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CACpE4B,IAAI,CAACL,OAAO,CAACC,GAAG,CAACxB,QAAQ,CAAC,CAAC;MAChC,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QACL;EAAA,GA3BKU,KAAK,CAACR,UAAU;IAAA;IAAA;IAAA;EAAA,QA+B7B,CAAC,CAAC;AAEX;AAAC,GA9CQJ,IAAI;AAAA,KAAJA,IAAI;AAgDb,eAAeA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
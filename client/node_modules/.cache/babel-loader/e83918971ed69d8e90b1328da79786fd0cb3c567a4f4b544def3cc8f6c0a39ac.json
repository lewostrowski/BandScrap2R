{"ast":null,"code":"var _jsxFileName = \"/home/capitalturtle/react/client/src/components/Spotify/Spotify.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Spotify(_ref) {\n  _s();\n  let {\n    showModal,\n    changeShow\n  } = _ref;\n  const [helpMsg, setHelpMsg] = useState('');\n  const [input, setInput] = useState({\n    client_id: '',\n    client_secret: ''\n  });\n  const handleInput = e => {\n    const keyName = e.target.name;\n    const keyVal = e.target.value;\n    setInput(prev => ({\n      ...prev,\n      [keyName]: keyVal\n    }));\n  };\n  const sendCredentials = () => {\n    fetch(\"http://localhost:5000/update_credentials\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      mode: 'cors',\n      body: JSON.stringify({\n        \"credentials\": input\n      })\n    });\n    setInput({\n      client_id: '',\n      client_secret: ''\n    });\n  };\n  return (\n    /*#__PURE__*/\n    // TODO(): Show last time credentials were updated.\n    // TODO(): Remove button\n    // TODO(): Succes message and close.\n    _jsxDEV(Modal, {\n      show: showModal,\n      onHide: () => {\n        changeShow(false, 'spotify');\n      },\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Spotify API credentials\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [helpMsg.length > 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"success\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: helpMsg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this) : null, /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Client ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"client_id\",\n              value: input.client_id,\n              onChange: handleInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \"Maybe some help here?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Client secret\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"client_secret\",\n              value: input.client_secret,\n              onChange: handleInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \"And here?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          onClick: () => {\n            sendCredentials();\n            setHelpMsg('Credentials saved.');\n          },\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: () => {\n            changeShow(false, 'spotify');\n          },\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"warning\",\n          onClick: () => {\n            setInput({\n              client_id: '',\n              client_secret: ''\n            });\n            sendCredentials();\n            setHelpMsg('Credentials cleared.');\n          },\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(Spotify, \"tNRB5rHNUlR+SXMY0msZIDsuW18=\");\n_c = Spotify;\nexport default Spotify;\nvar _c;\n$RefreshReg$(_c, \"Spotify\");","map":{"version":3,"names":["React","useState","Modal","Button","Form","Spotify","showModal","changeShow","helpMsg","setHelpMsg","input","setInput","client_id","client_secret","handleInput","e","keyName","target","name","keyVal","value","prev","sendCredentials","fetch","method","headers","mode","body","JSON","stringify","length"],"sources":["/home/capitalturtle/react/client/src/components/Spotify/Spotify.js"],"sourcesContent":["import React, { useState } from 'react'\n\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\nfunction Spotify({ showModal, changeShow }) {\n    const [helpMsg, setHelpMsg] = useState('')\n    const [input, setInput] = useState({\n        client_id: '',\n        client_secret: ''\n    })\n\n    const handleInput = (e) => {\n        const keyName = e.target.name\n        const keyVal = e.target.value\n        setInput(prev => ({...prev, [keyName]: keyVal}))\n    }\n\n    const sendCredentials = () => {\n        fetch(\"http://localhost:5000/update_credentials\", {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            mode: 'cors',\n            body: JSON.stringify({\"credentials\": input})\n        })\n        setInput({\n            client_id: '',\n            client_secret: ''            \n        })\n\n    }\n  return (\n    // TODO(): Show last time credentials were updated.\n    // TODO(): Remove button\n    // TODO(): Succes message and close.\n    <Modal show={showModal} onHide={() => {changeShow(false, 'spotify')}}>\n        <Modal.Header closeButton>\n            <Modal.Title>Spotify API credentials</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            {/* HELP MSG */}\n            {(helpMsg.length > 0) ? (\n                <Alert variant=\"success\">\n                        <p>{helpMsg}</p>\n                </Alert>\n            ): (\n                null\n            )}\n            <Form>\n                {/* Client ID */}\n                <Form.Group>\n                    <Form.Label>Client ID</Form.Label>\n                    <Form.Control type=\"text\" name='client_id' value={input.client_id} onChange={handleInput}/>\n                    <Form.Text className=\"text-muted\">\n                        Maybe some help here?\n                    </Form.Text>\n                </Form.Group>\n\n                {/* Client secret */}\n                <Form.Group>\n                    <Form.Label>Client secret</Form.Label>\n                    <Form.Control type=\"text\" name='client_secret' value={input.client_secret} onChange={handleInput}/>\n                    <Form.Text className=\"text-muted\">\n                        And here?\n                    </Form.Text>\n                </Form.Group>\n            </Form>\n        </Modal.Body>\n        <Modal.Footer>\n            \n            <Button variant=\"primary\" type=\"submit\" onClick={() => {\n                sendCredentials()\n                setHelpMsg('Credentials saved.')\n                }}>\n                    Save</Button>\n                <Button variant=\"primary\" onClick={() => {changeShow(false, 'spotify')}}>Close</Button>\n                <Button variant=\"warning\" onClick={() => {\n                    setInput({\n                        client_id: '',\n                        client_secret: ''            \n                    })\n                    sendCredentials()\n                    setHelpMsg('Credentials cleared.')\n                }}>Clear</Button>\n        </Modal.Footer>\n    </Modal>\n  )\n}\n\nexport default Spotify"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}